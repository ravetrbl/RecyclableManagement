@model RecyclingApp.Models.RecyclableType

@{
    ViewBag.Title = "Create";
}

<div class="uk-card uk-card-default uk-card-hover uk-card-body uk-margin-top">
    <h2 class="uk-card-title">Add New Recyclable Type</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="uk-form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "uk-text-danger" })

            <div class="uk-margin">
                @Html.LabelFor(model => model.Type, "Recyclable Type", htmlAttributes: new { @class = "uk-form-label" })
                <div class="uk-form-controls">
                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "uk-input" } })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "uk-text-danger" })
                </div>
            </div>

            <div class="uk-margin">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "uk-form-label" })
                <div class="uk-form-controls">
                    @Html.EditorFor(model => model.Rate, "Rate", new { htmlAttributes = new { @class = "uk-input" } })
                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "uk-text-danger" })
                </div>
            </div>

            <div class="uk-margin">
                @Html.LabelFor(model => model.MinKg, "Minimum Weight", htmlAttributes: new { @class = "uk-form-label" })
                <div class="uk-form-controls">
                    @Html.EditorFor(model => model.MinKg, new { htmlAttributes = new { @class = "uk-input", type = "number", min = "0" } })
                    @Html.ValidationMessageFor(model => model.MinKg, "", new { @class = "uk-text-danger" })
                </div>
            </div>

            <div class="uk-margin">
                @Html.LabelFor(model => model.MaxKg, "Maximum Weight", htmlAttributes: new { @class = "uk-form-label" })
                <div class="uk-form-controls">
                    @Html.EditorFor(model => model.MaxKg, new { htmlAttributes = new { @class = "uk-input", type = "number", min = "0" } })
                    @Html.ValidationMessageFor(model => model.MaxKg, "", new { @class = "uk-text-danger" })
                </div>
            </div>

            <div class="uk-margin">
                <div class="uk-form-controls uk-text-right">
                    <button type="button" id="resetButton" class="uk-button uk-button-default">
                        <span uk-icon="icon: refresh"></span> Reset
                    </button>

                    <button type="submit" class="uk-button uk-button-primary">
                        <span uk-icon="icon: plus"></span> Create
                    </button>
                </div>
            </div>
        </div>
    }

    <div class="uk-margin">
        <div class="uk-form-controls uk-text-left">
            <a href="@Url.Action("Index")" class="uk-button uk-button-default">
                <span uk-icon="icon: arrow-left"></span> Back to List
            </a>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("resetButton").addEventListener("click", function () {
            const form = document.querySelector("form");
            form.reset();

            document.getElementById("ComputedRate").value = "";
            document.getElementById("WeightWarning").textContent = "";
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
